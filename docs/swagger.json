{
    "swagger": "2.0",
    "info": {
        "description": "Automatic message sending system with retry mechanism and background processing",
        "title": "Message Dispatcher API",
        "termsOfService": "https://github.com/svbnbyrk/go-message-dispatcher",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/svbnbyrk/go-message-dispatcher/issues",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Get the health status of the API server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of messages with optional filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "List messages with pagination",
                "parameters": [
                    {
                        "enum": [
                            "pending",
                            "sent",
                            "failed"
                        ],
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Number of messages to return (1-100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of messages to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.MessageResponse"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "string",
                                "description": "Total number of messages"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new message to be sent via webhook with automatic retry mechanism",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Create a new message",
                "parameters": [
                    {
                        "description": "Message data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid API key",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messages/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific message by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get a message by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid message ID",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messaging/process": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Manually trigger message processing for testing purposes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messaging"
                ],
                "summary": "Process messages manually",
                "parameters": [
                    {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer",
                        "default": 2,
                        "description": "Number of messages to process (1-10)",
                        "name": "batch_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProcessingResultResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messaging/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the current message processing status and statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messaging"
                ],
                "summary": "Get processing status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProcessingStatusResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scheduler/start": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Start the background message processing scheduler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Start scheduler",
                "responses": {
                    "200": {
                        "description": "Scheduler started successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Scheduler already running",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scheduler/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the current status and statistics of the background message scheduler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get scheduler status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SchedulerStatusResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scheduler/stop": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Stop the background message processing scheduler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Stop scheduler",
                "responses": {
                    "200": {
                        "description": "Scheduler stopped successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Scheduler not running",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateMessageRequest": {
            "type": "object",
            "required": [
                "content",
                "phoneNumber"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello World! This is a test message."
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "+905551234567"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Validation failed"
                },
                "message": {
                    "type": "string",
                    "example": "phoneNumber is required"
                }
            }
        },
        "dto.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ok",
                        "error"
                    ],
                    "example": "ok"
                },
                "uptime": {
                    "type": "string",
                    "example": "2h30m45s"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "dto.MessageResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello World! This is a test message."
                },
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "externalId": {
                    "type": "string",
                    "example": "whatsapp_msg_12345"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "+905551234567"
                },
                "retryCount": {
                    "type": "integer",
                    "maximum": 3,
                    "minimum": 0,
                    "example": 0
                },
                "sentAt": {
                    "type": "string",
                    "example": "2024-01-15T10:32:00Z"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "sent",
                        "failed"
                    ],
                    "example": "pending"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                }
            }
        },
        "dto.ProcessingResultResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"webhook timeout for message 123\"]"
                    ]
                },
                "failedCount": {
                    "type": "integer",
                    "example": 1
                },
                "processedCount": {
                    "type": "integer",
                    "example": 5
                },
                "successCount": {
                    "type": "integer",
                    "example": 4
                }
            }
        },
        "dto.ProcessingStatusResponse": {
            "type": "object",
            "properties": {
                "failedToday": {
                    "type": "integer",
                    "example": 2
                },
                "isProcessing": {
                    "type": "boolean",
                    "example": false
                },
                "lastProcessedAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "nextProcessingAt": {
                    "type": "string",
                    "example": "2024-01-15T10:32:00Z"
                },
                "pendingCount": {
                    "type": "integer",
                    "example": 5
                },
                "processedToday": {
                    "type": "integer",
                    "example": 25
                }
            }
        },
        "dto.SchedulerStatusResponse": {
            "type": "object",
            "properties": {
                "batchSize": {
                    "type": "integer",
                    "example": 2
                },
                "interval": {
                    "type": "string",
                    "example": "2m"
                },
                "isCurrentlyProcessing": {
                    "type": "boolean",
                    "example": false
                },
                "isRunning": {
                    "type": "boolean",
                    "example": true
                },
                "lastProcessingTime": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "nextProcessingIn": {
                    "type": "string",
                    "example": "1m30s"
                },
                "totalFailed": {
                    "type": "integer",
                    "example": 10
                },
                "totalProcessed": {
                    "type": "integer",
                    "example": 150
                },
                "totalSuccessful": {
                    "type": "integer",
                    "example": 140
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}